library(tidyverse)
# Instalação das bibliotecas
install.packages("tidyverse")
# Bibliotecas
library(tidyverse)
library(class)
library(data.table)
# Dados
location <- read_csv("https://assets.datacamp.com/production/course_2906/datasets/locations.csv")
location
# Visualizando os cinco primeiros dados
head(location)
# Visualizando os cinco ultimos dados
tail(dados)
# Dados
dados <- read_csv("https://assets.datacamp.com/production/course_2906/datasets/locations.csv")
dados
# Visualizando os cinco primeiros dados
head(dados)
# Visualizando os cinco ultimos dados
tail(dados)
where9am <- dados %>%
filter(hour == 9, hourtype == "morning")
head(dados)
# Compute P(A)
p_A <- nrow(subset(where9am, dados == "office")) / 91
# Compute P(A)
p_A <- nrow(subset(where9am, dados == "office")) / 91
p_A
where9am <- dados %>%
filter(hour == 9, hourtype == "morning")
head(dados)
# Compute P(A)
p_A <- nrow(subset(where9am, dados == "office")) / 91
# Bibliotecas
library(tidyverse)
library(class)
library(data.table)
# Dados
location <- read_csv("https://assets.datacamp.com/production/course_2906/datasets/locations.csv")
location
# Visualizando os cinco primeiros dados
head(location)
# Visualizando os cinco ultimos dados
tail(location)
#
where9am <- location %>%
filter(hour == 9, hourtype == "morning")
head(location)
# Compute P(A)
p_A <- nrow(subset(where9am, location == "office")) / 91
# Compute P(A)
p_A <- nrow(subset(where9am, location == "office")) / 91
p_A
# Compute P(B)
p_B <- nrow(subset(where9am, daytype == "weekday")) / 91
p_B
# Compute the observed P(A and B)
p_AB <- nrow(subset(where9am, where9am$location == "office" & where9am$daytype == "weekday")) / 91
p_AB
# Compute P(A | B) and print its value
p_A_given_B <- p_AB / p_B
p_A_given_B
library(naivebayes)
thursday9am <- where9am %>%
filter(weekday == "thursday")
saturday9am <- where9am %>%
filter(weekday == "saturday")
install.packages("naivebayes")
library(naivebayes)
thursday9am <- where9am %>%
filter(weekday == "thursday")
saturday9am <- where9am %>%
filter(weekday == "saturday")
library(naivebayes)
# Model prediction
locmodel <- naive_bayes(location ~ daytype, data = where9am)
locmodel
# Predict Thursday's 9am location
predict(locmodel, thursday9am)
# Predict Saturdays's 9am location
predict(locmodel, saturday9am)
# Predict Thursday's 9am location
predict(locmodel, thursday9am)
predict
# Predict Saturdays's 9am location
predict(locmodel, saturday9am)
# Examining “raw” probabilities
print(locmodel)
# Obtain the predicted probabilities for Thursday at 9am
predict(locmodel, thursday9am , type = "prob")
# Obtain the predicted probabilities for Saturday at 9am
predict(locmodel, saturday9am, type = "prob")
# Location model
locations <- location
weekday_afternoon <- locations %>%
filter(daytype == "weekday", hourtype == "afternoon")
weekday_evening <- locations %>%
filter(daytype == "weekday", hourtype == "evening")
# Build a NB model of location
locmodel <- naive_bayes(location ~ daytype + hourtype, data = locations)
# Predict Brett's location on a weekday afternoon
predict(locmodel, weekday_afternoon)
weekend_afternoon <- locations %>%
filter(daytype == "weekend", hourtype == "afternoon")
# Observe the predicted probabilities for a weekend afternoon
predict(locmodel, weekend_afternoon, type = "prob")
library(class)
pred <- knn(training_data, testing_data, training_labels)
# Carregar o pacote 'class'
library(class)
# Cria um vetor de rótulos
sign_types <- signs$sign_type
# Carregar o pacote 'class'
library(tidyverse)
library(class)
library(data.table)
# Cria um vetor de rótulos
sign_types <- signs$sign_type
str(signs)
# Carregar o pacote 'class'
library(tidyverse)
library(class)
library(data.table)
# Cria um vetor de rótulos
sign_types <- signs$sign_type
library(naivebayes)
m <- naive_bayes(location ~ time_of_day, data = location_history)
# Dados
m <- read_csv("https://assets.datacamp.com/production/course_2906/datasets/locations.csv")
m
# Visualizando os cinco primeiros dados
head(m)
# Visualizando os cinco ultimos dados
tail(m)
m <- naive_bayes(location ~ time_of_day, data = location_history)
library(naivebayes)
thursday9am <- where9am %>%
filter(weekday == "thursday")
saturday9am <- where9am %>%
filter(weekday == "saturday")
m <- naive_bayes(m ~ time_of_day, data = location_history)
# Visualizando os cinco primeiros dados
head(m)
m
# Carregando biblioteca
library(rpart)
# Construir um modelo de empréstimo prevendo o resultado do empréstimo versus o valor do empréstimo e a pontuação de crédito
loan_model <- rpart(outcome ~ loan_amount + credit_score, data = loans, method = "class", control = rpart.control(cp = 0))
# Bibliotecas
library(tidyverse)
# Bibliotecas
library(tidyverse)
